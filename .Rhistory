seq.y0  <- seq(start.y[i], start.y[i]+sid0.y[i], by=1)
logi.x0 <- !is.na(match(dat0x, sprintf(digits0, seq.x0)))
logi.y0 <- !is.na(match(dat0y, sprintf(digits0, seq.y0)))
logi.x0 & logi.y0                  }
)
sp.rich <- sapply(1:length(sid0.x), function(i){
length(unique(data0$sp[logi0.xy[[i]]]))
})
sp.indi <- sapply(1:length(sid0.x), function(i){
length(data0$sp[logi0.xy[[i]]])
})
return(list(area=(sid0.x/100)*(sid0.y/100), x=start.x, y=start.y, sp.rich=sp.rich,
sp.indi=sp.indi) )
}
######################33##############################################
SampleRanSqu0 <- function(data0=data0, side.x=seq(0, 500, by=10),
n.rep=10, plotdim=c(500, 300)){
sid0.x <- rep(side.x, times=n.rep)
sid0.y <- rep(side.x/5*3, times=n.rep)
start.x <- sapply(sid0.x,
function(i)runif(n=1, min=0, max=plotdim[1]-i)
)
start.y <- sapply(sid0.y,
function(i)runif(n=1, min=0, max=plotdim[2]-i)
)
dat0xy <- data.frame(x=data0$x, y=data0$y)
logi0.xy <- lapply(1 : length(sid0.x), function(i){
d4 <- subset(dat0xy,x >= start.x[i] & x <= start.x[i]+sid0.x[i] &
y >= start.y[i] & y <= start.y[i]+sid0.y[i])
as.numeric(row.names(d4))               }
)
sp.rich <- sapply(1:length(sid0.x), function(i){
length(unique(data0$sp[logi0.xy[[i]]]))
})
sp.indi <- sapply(1:length(sid0.x), function(i){
length(data0$sp[logi0.xy[[i]]])
})
return(list(area=(sid0.x/100)*(sid0.y/100), x=start.x, y=start.y, sp.rich=sp.rich,
sp.indi=sp.indi) )
}
system.time(
resu.all <- SampleRanSqu(data0=data0, side.x=seq(1, 500, by=10), n.rep=20, plotdim=c(500, 300))
)
system.time(
resu.all0 <- SampleRanSqu0(data0=data0, side.x=seq(1, 500, by=10), n.rep=20, plotdim=c(500, 300))
)
system.time(
logi0.xy <- lapply(1 : length(sid0.x), function(i){
seq.x0  <- seq(start.x[i], start.x[i]+sid0.x[i], by=1)
seq.y0  <- seq(start.y[i], start.y[i]+sid0.y[i], by=1)
logi.x0 <- !is.na(match(dat0x, sprintf(digits0, seq.x0)))
logi.y0 <- !is.na(match(dat0y, sprintf(digits0, seq.y0)))
logi.x0 & logi.y0                  }
)
)
#########
system.time({
logi0.x  <- lapply(1 : length(sid0.x), function(i){
seq.x0  <- seq(start.x[i], start.x[i]+sid0.x[i], by=1)
logi.x0 <- !is.na(match(dat0x, sprintf(digits0, seq.x0)))
logi.x0                                         }
)
logi0.y <- lapply(1 : length(sid0.x), function(i){
seq.y0  <- seq(start.y[i], start.y[i]+sid0.y[i], by=1)
logi.y0 <- !is.na(match(dat0y, sprintf(digits0, seq.y0)))
logi.y0                                       }
)
logi.x0 & logi.y0
}
)
#####################################
#######################
system.time(
logi0.xy <- lapply(1 : length(sid0.x), function(i){
seq.x0  <- seq(start.x[i], start.x[i]+sid0.x[i], by=1)
seq.y0  <- seq(start.y[i], start.y[i]+sid0.y[i], by=1)
logi.x0 <- !is.na(match(dat0x, sprintf(digits0, seq.x0)))
logi.y0 <- !is.na(match(dat0y, sprintf(digits0, seq.y0)))
logi.x0 & logi.y0                  }
)
)
#########
system.time({
logi0.x  <- lapply(1 : length(sid0.x), function(i){
seq.x0  <- seq(start.x[i], start.x[i]+sid0.x[i], by=1)
logi.x0 <- !is.na(match(dat0x, sprintf(digits0, seq.x0)))
logi.x0                                         }
)
logi0.y <- lapply(1 : length(sid0.x), function(i){
seq.y0  <- seq(start.y[i], start.y[i]+sid0.y[i], by=1)
logi.y0 <- !is.na(match(dat0y, sprintf(digits0, seq.y0)))
logi.y0                                       }
)
logi0.x & logi0.y
}
)
logi0.x  <- lapply(1 : length(sid0.x), function(i){
seq.x0  <- seq(start.x[i], start.x[i]+sid0.x[i], by=1)
logi.x0 <- !is.na(match(dat0x, sprintf(digits0, seq.x0)))
logi.x0                                         }
)
logi0.x
system.time(
logi0.xy <- lapply(1 : length(sid0.x), function(i){
seq.x0  <- seq(start.x[i], start.x[i]+sid0.x[i], by=1)
seq.y0  <- seq(start.y[i], start.y[i]+sid0.y[i], by=1)
logi.x0 <- !is.na(match(dat0x, sprintf(digits0, seq.x0)))
logi.y0 <- !is.na(match(dat0y, sprintf(digits0, seq.y0)))
logi.x0 & logi.y0                  }
)
)
#########
system.time({
logi0.x  <- lapply(1 : length(sid0.x), function(i){
seq.x0  <- seq(start.x[i], start.x[i]+sid0.x[i], by=1)
logi.x0 <- !is.na(match(dat0x, sprintf(digits0, seq.x0)))
logi.x0                                         }
)
logi0.y <- lapply(1 : length(sid0.x), function(i){
seq.y0  <- seq(start.y[i], start.y[i]+sid0.y[i], by=1)
logi.y0 <- !is.na(match(dat0y, sprintf(digits0, seq.y0)))
logi.y0                                       }
)
logi0.xy <- lapply(1: length(sid0.x),function(i){logi0.x[[i]] & logi0.y[[i]]}
)
logi0.xy
}
)
match(dat0x, sprintf(digits0, seq.x0))
seq.x0
sprintf(digits0, seq.x0)
start.x[i]
dat0x
start.x
round(start.x,1)
start.x <- round(start.x)
round(start.x)
#######################
system.time(
logi0.xy <- lapply(1 : length(sid0.x), function(i){
seq.x0  <- seq(start.x[i], start.x[i]+sid0.x[i], by=1)
seq.y0  <- seq(start.y[i], start.y[i]+sid0.y[i], by=1)
logi.x0 <- !is.na(match(dat0x, sprintf(digits0, seq.x0)))
logi.y0 <- !is.na(match(dat0y, sprintf(digits0, seq.y0)))
logi.x0 & logi.y0                  }
)
)
#############
system.time({
dat0x.1 <- as.numeric(dat0x)
dat0y.1 <- as.numeric(dat0y)
start.x <- round(start.x)
start.y <- round(start.y)
logi0.xy <- lapply(1 : length(sid0.x), function(i){
logi.x0 <-  dat0x.1 >= start.x[i] & dat0x.1 <= start.x[i]+sid0.x[i]
logi.y0 <-  dat0y.1 >= start.y[i] & dat0y.1 <= start.y[i]+sid0.y[i]
logi.x0 & logi.y0                               }
)
} )
SampleRanSqu0 <- function(data0=data0, side.x=seq(0, 500, by=10),
n.rep=10, plotdim=c(500, 300)){
sid0.x <- rep(side.x, times=n.rep)
sid0.y <- rep(side.x/5*3, times=n.rep)
start.x <- sapply(sid0.x,
function(i)runif(n=1, min=0, max=plotdim[1]-i)
)
start.y <- sapply(sid0.y,
function(i)runif(n=1, min=0, max=plotdim[2]-i)
)
logi0.xy <- lapply(1 : length(sid0.x), function(i){
logi.x0 <-  data0$x >= start.x[i] & data0$x <= start.x[i]+sid0.x[i]
logi.y0 <-  data0$y >= start.y[i] & data0$y <= start.y[i]+sid0.y[i]
logi.x0 & logi.y0                              }
)
sp.rich <- sapply(1:length(sid0.x), function(i){
length(unique(data0$sp[logi0.xy[[i]]]))
})
sp.indi <- sapply(1:length(sid0.x), function(i){
length(data0$sp[logi0.xy[[i]]])
})
return(list(area=(sid0.x/100)*(sid0.y/100), x=start.x, y=start.y, sp.rich=sp.rich,
sp.indi=sp.indi) )
}
SampleRanSqu <- function(data0=data0, side.x=seq(0, 500, by=10),
n.rep=10, plotdim=c(500, 300)){
digits0 <- '%1.f'
dat0x <- sprintf(digits0, data0$x)
dat0y <- sprintf(digits0, data0$y)
sid0.x <- rep(side.x, times=n.rep)
sid0.y <- rep(side.x/5*3, times=n.rep)
start.x <- sapply(sid0.x,
function(i)runif(n=1, min=0, max=plotdim[1]-i)
)
start.y <- sapply(sid0.y,
function(i)runif(n=1, min=0, max=plotdim[2]-i)
)
logi0.xy <- lapply(1 : length(sid0.x), function(i){
seq.x0  <- seq(start.x[i], start.x[i]+sid0.x[i], by=1)
seq.y0  <- seq(start.y[i], start.y[i]+sid0.y[i], by=1)
logi.x0 <- !is.na(match(dat0x, sprintf(digits0, seq.x0)))
logi.y0 <- !is.na(match(dat0y, sprintf(digits0, seq.y0)))
logi.x0 & logi.y0                  }
)
sp.rich <- sapply(1:length(sid0.x), function(i){
length(unique(data0$sp[logi0.xy[[i]]]))
})
sp.indi <- sapply(1:length(sid0.x), function(i){
length(data0$sp[logi0.xy[[i]]])
})
return(list(area=(sid0.x/100)*(sid0.y/100), x=start.x, y=start.y, sp.rich=sp.rich,
sp.indi=sp.indi) )
}
######################33##############################################
SampleRanSqu0 <- function(data0=data0, side.x=seq(0, 500, by=10),
n.rep=10, plotdim=c(500, 300)){
sid0.x <- rep(side.x, times=n.rep)
sid0.y <- rep(side.x/5*3, times=n.rep)
start.x <- sapply(sid0.x,
function(i)runif(n=1, min=0, max=plotdim[1]-i)
)
start.y <- sapply(sid0.y,
function(i)runif(n=1, min=0, max=plotdim[2]-i)
)
logi0.xy <- lapply(1 : length(sid0.x), function(i){
logi.x0 <-  data0$x >= start.x[i] & data0$x <= start.x[i]+sid0.x[i]
logi.y0 <-  data0$y >= start.y[i] & data0$y <= start.y[i]+sid0.y[i]
logi.x0 & logi.y0                              }
)
sp.rich <- sapply(1:length(sid0.x), function(i){
length(unique(data0$sp[logi0.xy[[i]]]))
})
sp.indi <- sapply(1:length(sid0.x), function(i){
length(data0$sp[logi0.xy[[i]]])
})
return(list(area=(sid0.x/100)*(sid0.y/100), x=start.x, y=start.y, sp.rich=sp.rich,
sp.indi=sp.indi) )
}
#####################################
system.time(
resu.all <- SampleRanSqu(data0=data0, side.x=seq(1, 500, by=10), n.rep=20, plotdim=c(500, 300))
)
system.time(
resu.all0 <- SampleRanSqu0(data0=data0, side.x=seq(1, 500, by=10), n.rep=20, plotdim=c(500, 300))
)
######
system.time(
logi0.xy <- lapply(1 : length(sid0.x), function(i){
logi.x0 <-  data0$x >= start.x[i] & data0$x <= start.x[i]+sid0.x[i]
logi.y0 <-  data0$y >= start.y[i] & data0$y <= start.y[i]+sid0.y[i]
logi.x0 & logi.y0                              }
)
)
system.time(
logi0.xy <- lapply(1 : length(sid0.x), function(i){
logi.x0 <-  data0$x >= start.x[i] & data0$x <= start.x[i]+sid0.x[i]
logi.y0 <-  data0$y >= start.y[i] & data0$y <= start.y[i]+sid0.y[i]
logi.x0 & logi.y0                              }
)
)
system.time(
logi0.xy <- lapply(1 : length(sid0.x), function(i){
data0$x >= start.x[i] & data0$x <= start.x[i]+sid0.x[i]
& data0$y >= start.y[i] & data0$y <= start.y[i]+sid0.y[i]
}
)
)
system.time(
logi0.xy <- lapply(1 : length(sid0.x), function(i){
logi.x0 <-  data0$x >= start.x[i] & data0$x <= start.x[i]+sid0.x[i]
logi.y0 <-  data0$y >= start.y[i] & data0$y <= start.y[i]+sid0.y[i]
logi.x0 & logi.y0                              }
)
)
system.time(
logi0.xy <- lapply(1 : length(sid0.x), function(i){
data0$x >= start.x[i] & data0$x <= start.x[i]+sid0.x[i] &
data0$y >= start.y[i] & data0$y <= start.y[i]+sid0.y[i]
}
)
)
)
system.time(  {
logi0.xy <- lapply(1 : length(sid0.x), function(i){
logi.x0 <-  data0$x >= start.x[i] & data0$x <= start.x[i]+sid0.x[i]
logi.y0 <-  data0$y >= start.y[i] & data0$y <= start.y[i]+sid0.y[i]
logi.x0 & logi.y0                              }
)
logi0.xy <- lapply(1 : length(sid0.x), function(i){
logi.x0 <-  data0$x >= start.x[i] & data0$x <= start.x[i]+sid0.x[i]
logi.y0 <-  data0$y >= start.y[i] & data0$y <= start.y[i]+sid0.y[i]
logi.x0 & logi.y0                              }
)
logi0.xy <- lapply(1 : length(sid0.x), function(i){
logi.x0 <-  data0$x >= start.x[i] & data0$x <= start.x[i]+sid0.x[i]
logi.y0 <-  data0$y >= start.y[i] & data0$y <= start.y[i]+sid0.y[i]
logi.x0 & logi.y0                              }
)
}  )
system.time( {
logi0.xy <- lapply(1 : length(sid0.x), function(i){
data0$x >= start.x[i] & data0$x <= start.x[i]+sid0.x[i] &
data0$y >= start.y[i] & data0$y <= start.y[i]+sid0.y[i]
}
)
logi0.xy <- lapply(1 : length(sid0.x), function(i){
data0$x >= start.x[i] & data0$x <= start.x[i]+sid0.x[i] &
data0$y >= start.y[i] & data0$y <= start.y[i]+sid0.y[i]
}
)
logi0.xy <- lapply(1 : length(sid0.x), function(i){
data0$x >= start.x[i] & data0$x <= start.x[i]+sid0.x[i] &
data0$y >= start.y[i] & data0$y <= start.y[i]+sid0.y[i]
}
)
})
SampleRanSqu <- function(data0=data0, side.x=seq(0, 500, by=10),
n.rep=10, plotdim=c(500, 300)){
digits0 <- '%1.f'
dat0x <- sprintf(digits0, data0$x)
dat0y <- sprintf(digits0, data0$y)
sid0.x <- rep(side.x, times=n.rep)
sid0.y <- rep(side.x/5*3, times=n.rep)
start.x <- sapply(sid0.x,
function(i)runif(n=1, min=0, max=plotdim[1]-i)
)
start.y <- sapply(sid0.y,
function(i)runif(n=1, min=0, max=plotdim[2]-i)
)
logi0.xy <- lapply(1 : length(sid0.x), function(i){
seq.x0  <- seq(start.x[i], start.x[i]+sid0.x[i], by=1)
seq.y0  <- seq(start.y[i], start.y[i]+sid0.y[i], by=1)
logi.x0 <- !is.na(match(dat0x, sprintf(digits0, seq.x0)))
logi.y0 <- !is.na(match(dat0y, sprintf(digits0, seq.y0)))
logi.x0 & logi.y0                  }
)
sp.rich <- sapply(1:length(sid0.x), function(i){
length(unique(data0$sp[logi0.xy[[i]]]))
})
sp.indi <- sapply(1:length(sid0.x), function(i){
length(data0$sp[logi0.xy[[i]]])
})
return(list(area=(sid0.x/100)*(sid0.y/100), x=start.x, y=start.y, sp.rich=sp.rich,
sp.indi=sp.indi) )
}
######################33##############################################
SampleRanSqu0 <- function(data0=data0, side.x=seq(0, 500, by=10),
n.rep=10, plotdim=c(500, 300)){
sid0.x <- rep(side.x, times=n.rep)
sid0.y <- rep(side.x/5*3, times=n.rep)
start.x <- sapply(sid0.x,
function(i)runif(n=1, min=0, max=plotdim[1]-i)
)
start.y <- sapply(sid0.y,
function(i)runif(n=1, min=0, max=plotdim[2]-i)
)
logi0.xy <- lapply(1 : length(sid0.x), function(i){
data0$x >= start.x[i] & data0$x <= start.x[i]+sid0.x[i] &
data0$y >= start.y[i] & data0$y <= start.y[i]+sid0.y[i]
}
)
sp.rich <- sapply(1:length(sid0.x), function(i){
length(unique(data0$sp[logi0.xy[[i]]]))    }
)
sp.indi <- sapply(1:length(sid0.x), function(i){
length(data0$sp[logi0.xy[[i]]])           }
)
return(list(area=(sid0.x/100)*(sid0.y/100), x=start.x, y=start.y, sp.rich=sp.rich,
sp.indi=sp.indi) )
}
#####################################
system.time(
resu.all <- SampleRanSqu(data0=data0, side.x=seq(1, 500, by=10), n.rep=20, plotdim=c(500, 300))
)
system.time(
resu.all0 <- SampleRanSqu0(data0=data0, side.x=seq(1, 500, by=10), n.rep=20, plotdim=c(500, 300))
)
5/5*3
SampleRanSqu <- function(data0=data0, side.x=seq(0, 500, by=10),
n.rep=10, plotdim=c(500, 300)){
digits0 <- '%1.f'
dat0x <- sprintf(digits0, data0$x)
dat0y <- sprintf(digits0, data0$y)
sid0.x <- rep(side.x, times=n.rep)
sid0.y <- rep(side.x/5*3, times=n.rep)
start.x <- sapply(sid0.x,
function(i)runif(n=1, min=0, max=plotdim[1]-i)
)
start.y <- sapply(sid0.y,
function(i)runif(n=1, min=0, max=plotdim[2]-i)
)
logi0.xy <- lapply(1 : length(sid0.x), function(i){
seq.x0  <- seq(start.x[i], start.x[i]+sid0.x[i], by=1)
seq.y0  <- seq(start.y[i], start.y[i]+sid0.y[i], by=1)
logi.x0 <- !is.na(match(dat0x, sprintf(digits0, seq.x0)))
logi.y0 <- !is.na(match(dat0y, sprintf(digits0, seq.y0)))
logi.x0 & logi.y0                  }
)
sp.rich <- sapply(1:length(sid0.x), function(i){
length(unique(data0$sp[logi0.xy[[i]]]))
})
sp.indi <- sapply(1:length(sid0.x), function(i){
length(data0$sp[logi0.xy[[i]]])
})
return(list(area=(sid0.x/100)*(sid0.y/100), x=start.x, y=start.y, sp.rich=sp.rich,
sp.indi=sp.indi) )
}
######################33##############################################
SampleRanSqu0 <- function(data0=data0, side.x=seq(0, 500, by=10),
n.rep=10, plotdim=c(500, 300)){
sid0.x <- rep(side.x, times=n.rep)
sid0.y <- rep(side.x/5*3, times=n.rep)
start.x <- sapply(sid0.x, function(i)runif(n=1, min=0, max=plotdim[1]-i))
start.y <- sapply(sid0.y, function(i)runif(n=1, min=0, max=plotdim[2]-i))
logi0.xy <- lapply(1 : length(start.x), function(i){
data0$x >= start.x[i] & data0$x <= start.x[i]+sid0.x[i] &
data0$y >= start.y[i] & data0$y <= start.y[i]+sid0.y[i]
}
)
sp.rich <- sapply(1:length(start.x), function(i){
length(unique(data0$sp[logi0.xy[[i]]]))   }
)
sp.abun <- sapply(1:length(start.x), function(i){
length(data0$sp[logi0.xy[[i]]])           }
)
return(list(area=(sid0.x/100)*(sid0.y/100), x=start.x, y=start.y, sp.rich=sp.rich,
sp.abun=sp.abun) )
}
#####################################
system.time(
resu.all <- SampleRanSqu(data0=data0, side.x=seq(1, 500, by=10), n.rep=50, plotdim=c(500, 300))
)
system.time(
resu.all0 <- SampleRanSqu0(data0=data0, side.x=seq(1, 500, by=10), n.rep=50, plotdim=c(500, 300))
)
system.time(
resu.all <- SampleRanSqu(data0=data0, side.x=seq(1, 500, by=5), n.rep=50, plotdim=c(500, 300))
)
system.time(
resu.all0 <- SampleRanSqu0(data0=data0, side.x=seq(1, 500, by=5), n.rep=50, plotdim=c(500, 300))
)
setwd("F:/DataW/lg-data/composition")
dir()
dat <- read.csv('lgdat2013.csv')
head(dat)
dat01 <- subset(dat, sp!='00枯立木')
dat00 <- subset(dat01,is.na(bra))
levels(dat00$sp)
dim(dat00)
unique(dat00$sp)
############################################################
#
DoPoint <- function(xm01, den00, TEXT=1){
Tex0 <- ifelse(TEXT==1
, sprintf('(%s, ln%s)', xm01, round(exp(den00[xm01])))
, sprintf('(%s, %s%%)', xm01, round(den00[xm01],2))
)
#
points(xm01,den00[xm01], col=2)
segments(xm01, -1,xm01,den00[xm01], lty=2, col=1)
segments(-6, den00[xm01], xm01, den00[xm01], lty=2, col=1)
x0 <- ifelse(TEXT==1, 25, 35)
y0 <- ifelse(TEXT==1, 0.4, -0.1)
text(xm01+x0,den00[xm01]+y0, Tex0, cex=0.7  )
}
####
# species-abundance
tab00 <- sort(table(dat00$sp), decreasing = T)
t.1 <- length(which(tab00>15))+1
t.10 <- length(which(tab00>150))+1
############
#x11(3,2.8)
tiff('lnAbundanceSpecies.tiff',
width = 2100, height = 1900,res=600,compression = "lzw")
par(mex=0.45,mar=c(5.1, 6.3,1,1))
plot(log(tab00)
, type='p'
, cex=0.5
, cex.lab=0.7
, cex.axis=0.6
,ylab="多度(取对数) \n ln(abundance)"
,xlab="物种多度序列 Species rank in abundance"
)
DoPoint(xm01=t.1, den00=log(tab00), TEXT=1)
DoPoint(xm01=t.10, den00=log(tab00), TEXT=1)
dev.off()
#############################################
#
tab01 <- cumsum(tab00)*100/sum(tab00)
t5 <- length(which(tab01<50))+1
t9 <- length(which(tab01<90))+1
###########
#################
#x11(3,2.8)
tiff('CumulativeAbundanceSpecies.tiff',
width = 2100, height = 1900,res=600,compression = "lzw")
par(mex=0.45,mar=c(5.1, 6.3, 1, 1))
plot(tab01
, type='p'
, cex=0.5
, cex.lab=0.7
, cex.axis=0.6
,ylab="累计百分比多度 \n Cumulative percentage of abundance(%)"
,xlab="物种多度序列 Species rank in abundance"
)
#grid()
DoPoint(xm01=t5, den00=tab01, TEXT=2)
DoPoint(xm01=t9, den00=tab01, TEXT=2)
dev.off()
setwd("F:/DataW/lg-data/composition")
dir()
dat <- read.csv('lgdat2013.csv')
head(dat)
